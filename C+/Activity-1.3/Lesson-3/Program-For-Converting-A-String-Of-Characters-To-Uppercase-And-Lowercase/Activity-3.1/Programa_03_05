#include <vcl.h>
#include <stdio.h>
#include <conio.h>

// Diccionario español-inglés
char* diccionario_espanol_ingles[] =
{
  "el", "the",
  "la", "the",
  "mesa", "table",
  "silla", "chair",
  "caja", "box",
  "piso", "floor",
  "cama", "bed",
  "libro", "book",
  "cuaderno", "notebook",
  "lapiz", "pencil",
  "pluma", "pen",
  "es", "is",
  "blanco", "white",
  "blanca", "white",
  "negro", "black",
  "negra", "black",
  NULL,
};

// Diccionario español-inglés
char* diccionario_espanol_aleman[] =
{
  "el", "der",
  "la", "die",
  "mesa", "Tisch",
  "silla", "Stuhl",
  "caja", "Box",
  "piso", "Boden",
  "cama", "Bett",
  "libro", "Buch",
  "cuaderno", "Notizbuch",
  "lapiz", "Bleistift",
  "pluma", "Stift",
  "es", "ist",
  "blanco", "weiB",
  "blanca", "weiB",
  "negro", "schwarz",
  "negra", "schwarz",
  NULL,
};

// Diccionario español-nahuatl
char* diccionario_espanol_nahuatl[] =
{
  "el", "lehuat",
  "la", "sin traduccion",
  "mesa", "akopechtli",
  "silla", "ikpali",
  "caja", "petlakali",
  "piso", "tlalpepechtli",
  "cama", "tlapechtli",
  "libro", "amoxtli",
  "cuaderno", "isuamoxtli",
  "lapiz", "tekonali",
  "pluma", "sin traduccion",
  "es", "sin traduccion",
  "blanco", "istak",
  "blanca", "istatik",
  "negro", "tliltik",
  "negra", "tliltik",
  NULL,
};

#pragma argused
int main(int argc, char* argv[])
{
  char caracter;
  do
  {
    clrscr();
    printf ("Programa 3.5. Traductor de palabras\n");
    printf ("Descripción:\n");
    printf ("Este programa traduce una oración en español al inglés, alemán y náhuatl. Las palabras");
    printf (" deben estar separadas al menos por un guión medio.");

    // Solicita al usuario la introducción de cadena
    printf("\n\nIntroduce la oración: ");
    char cadena_origen[80];
    scanf("%s", cadena_origen);

    // Convierte la cadena a minúsculas
    int i = 0;
    while (cadena_origen[i])
    {
      cadena_origen[i] = tolower(cadena_origen[i]);
      i++;
    }

    // Define cadena en donde se guardará la traducción
    char cadena_destino[80];

    // La inicializa como una cadena vacía
    strcpy(cadena_destino, "");

    // Define una variable booleana
    bool palabra_encontrada;
    bool traduccion_completa = true;
    int j;
    int k;
    int l;
    i = 0;
    while (cadena_origen[i] != 0)
    {
      // Ubica palabra en la cadena
      char* palabra = &cadena_origen[i];

      // Encuentra primera ocurrencia de '-'
      while ((cadena_origen[i] !=0) && (cadena_origen[i] != '-')) i++;

      // Si hay un separador, encontró una palabra
      if (cadena_origen[i] == '-')
      {
        // Agrega carácter nulo
        cadena_origen[i] = 0;
        i++;
      }

      // Elige a cual idioma traducir
      printf ("\n\nElija con un número a cual idioma desea traducir\n");
      printf ("\n\n1.- Ingles\n2.- Aleman\n3.- Nahuatl\n\n");

      char idioma;

      switch(idioma)
      {
        case '1':
        case '2':
        case '3':

                idioma = cadena_origen[i];
                break;
      }


      // Busca palabra en el diccionario inglés
      j = 0;
      palabra_encontrada = false;
      while (diccionario_espanol_ingles[j])
      {
        if (strcmp (palabra, diccionario_espanol_ingles[j]) == 0)
        {
          strcat (cadena_destino, diccionario_espanol_ingles[j+1]);
          strcat (cadena_destino, " ");
          palabra_encontrada = true;
          break;
        }
        j = j + 2;
      }


      // Busca palabra en el diccionario alemán
      k = 0;
      palabra_encontrada = false;
      while (diccionario_espanol_aleman[j])
      {
        if (strcmp (palabra, diccionario_espanol_aleman[j]) == 0)
        {
          strcat (cadena_destino, diccionario_espanol_aleman[k+1]);
          strcat (cadena_destino, " ");
          palabra_encontrada = true;
          break;
        }
        k = k + 2;
      }


      // Busca palabra en el diccionario náhuatl
      l = 0;
      palabra_encontrada = false;
      while (diccionario_espanol_nahuatl[l])
      {
        if (strcmp (palabra, diccionario_espanol_nahuatl[l]) == 0)
        {
          strcat (cadena_destino, diccionario_espanol_nahuatl[l+1]);
          strcat (cadena_destino, " ");
          palabra_encontrada = true;
          break;
        }
        l = l + 2;
      }


      // Verifica si la traducción está completa
      traduccion_completa = traduccion_completa & palabra_encontrada;

      // Encuentra el siguietne carádcter diferente a '-'
      while(cadena_origen[i] == '-') i++;
    }

    if (traduccion_completa) printf("\n\nLa traducción es: %s", cadena_destino);
                        else printf("\n\nNo se tradujeron todas las palabras");
    printf("\n\n¿Desea continuar (S/N)?: ");
    caracter = UpCase(getch());
  } while (caracter != 'N');
  return 0;
}
