#include <vcl.h>
#include <stdio.h>
#include <conio.h>

#pragma hdrstop

//------------------------------------------------------------------
#pragma argused

//*** Definición de un "tipo" de variable
typedef struct
{
  char nombre[80];
  float calificacion;
  float edad;
  float suma;
} INFO_ALUMNO;

int main(int argc, char* argv[])
{
  char caracter;
  do
  {
    clrscr();
    printf("Programa 2.3\n");
    printf("Este programa determina la calificación menor de un grupo de 5 alumnos.\n");
    printf("La acción se repite mientras el usuario lo desee\n\n");

    INFO_ALUMNO alumno[5];
    printf("Introduce los datos de los alumnos\n");
    int i;
    for (i=0; i<5; i++)
    {
        printf("\nAlumno %d\n", i+1);
        printf("Nombre: ");
        scanf("%s",&alumno[i].nombre);
        printf("Calificación: ");
        scanf("%f",&alumno[i].calificacion);
        printf("Edad: ");
        scanf("%f",&alumno[i].edad);
    }

    int j;
    INFO_ALUMNO temp;

    for (i=0; i<5; i++)
      for(j=i+1; j<5; j++)
        if (alumno[i].calificacion < alumno[j].calificacion)
        {
          temp = alumno[i];
          alumno[i] = alumno[j];
          alumno[j] = temp;
        }

    printf("\nEl alumno que tiene la mayor calificación es %s de %.0f anios con %.1f\n\n", alumno[0].nombre, alumno[0].edad, alumno[0].calificacion);

    for (i=0; i<5; i++)
      for(j=i+1; j<5; j++)
        if (alumno[i].calificacion > alumno[j].calificacion)
        {
          temp = alumno[i];
          alumno[i] = alumno[j];
          alumno[j] = temp;
        }

    float suma = 0;
    for (i=0; i<5; i++)
        {
          suma = suma + alumno[i].calificacion;
          suma = suma/5.0;
        }

    printf("\nEl alumno que tiene la menor calificación es %s de %.0f anios con %.1f\n\n", alumno[0].nombre, alumno[0].edad, alumno[0].calificacion);
    printf("\nEl promedio de las calificaciones de todos los alumnos es %.1f\n\n", alumno[0].suma);
    printf("¿Desea repetir la captura (S/N)? ");
    caracter = UpCase(getche());
  } while (caracter !='N');
  return 0;
}



